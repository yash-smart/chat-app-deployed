<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="/chat.css" >
</head>
<style>
    p {
        white-space: pre-wrap;
    }
</style>
<body>
    <ul class="nav nav-pills">
        <li class="nav-item">
          <a class="nav-link" aria-current="page" href="/main/<%= user_id %>">Home</a>
        </li>
    </ul>
    <div style="display: none;" id="user_id"><%= user_id %></div>
    <div style="display: none;" id="second_user"><%= second_user %></div>
    <h1><%= chat_username %></h1>
    <div id="chatArea" style="overflow: scroll;height: 50vh;">
        <% for(let i=0;i<messages.length;i++) { %>
            <% if (fromto[i] == true) { %>
                <div class="chat-sent">
                    <% if (status[i] == 'unread') { %>
                        <p style="color: aqua;" class="aqua"><%= messages[i] %></p>
                    <% } else { %>
                        <p style="color: green;"><%= messages[i] %></p>
                    <% } %>
                    <p class="time"><%= time[i] %></p>
                    <% console.log(time) %>
                
                </div>
            <% } else { %>
                <div class="chat-received">
                    <% if (status[i] == 'unread') { %>
                        <p style="color: red;"><%= messages[i] %></p>
                    <% } else { %>
                        <p style="color: blue;"><%= messages[i] %></p>
                    <% } %>
                    <p class="time"><%= time[i] %></p>
                </div>
            <% } %>
        <% } %>
    </div>
    <div style="margin: 10px;">
        <textarea rows="1" style="white-space: pre-wrap;"></textarea>
        <button onclick="sendMessage()">Send</button>
        <p style="color: red;display: none;" id="message"></p>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
    function arraysEqual(arr1,arr2) {
        for (let i=0;i<arr1.length;i++) {
            if (arr1[i] !== arr2[i]) {
                return false;
            }
        }
        return true;
    }
    function membership(arr,element) {
        for (let i=0;i<arr.length;i++) {
            if (arraysEqual(arr[i],element)) {
                return true;
            }
        }
        return false;
    }
    
    let status = 'online';
    let message_sent = [];
    let message_received = [];
    document.addEventListener('visibilitychange',() => {
        if (document.visibilityState == 'visible') {
            status = 'online'
            socket.send('A'+JSON.stringify([document.getElementById('user_id').textContent,document.getElementById('second_user').textContent]));
        } else {
            status = 'offline'
        }
    })
    document.getElementById('chatArea').scrollTo({
        top: document.getElementById('chatArea').scrollHeight,
    })
    function onMouseOver() {
        this.setAttribute('rows',3)
    }
    function onMouseOut() {
        this.setAttribute('rows',1)
    }
    function sendMessage() {
        if (isOpen(socket)) {
            socket.send('4'+JSON.stringify([4,parseInt(document.getElementById('second_user').textContent),parseInt(document.getElementById('user_id').textContent),textArea.value]));
        } else {
            let message_element = document.getElementById('message');
            message_element.style.display = 'block';
            message_element.textContent = 'Can\'t send message. You are offline. Kindly reload.'
        }
    }
    let textArea = document.getElementsByTagName('textarea')[0];
    textArea.addEventListener('mouseover',onMouseOver)
    textArea.addEventListener('mouseout',onMouseOut)
    let time_arr = document.getElementsByClassName('time');
    for (let i=0;i<time_arr.length;i++) {
        let date = new Date(time_arr[i].textContent);
        console.log(date)
        time_arr[i].textContent = date.getDate() + ' ' + date.toLocaleString('default',{month: 'long'}) + ' ' + date.getFullYear() + ' ' + date.getHours() + ':' +date.getMinutes();
    }
    const socket = new WebSocket("ws://192.168.31.103:5000");
    socket.addEventListener("open", (event) => {
        console.log('Connected to server')
        socket.send('2'+JSON.stringify([document.getElementById('user_id').textContent,document.getElementById('second_user').textContent]));
    });
    function isOpen(ws) {
        return ws.readyState === ws.OPEN;
    }
    socket.addEventListener("message", (event) => {
        let message = ''+event.data;
        console.log('Message from server: '+message);
        if (message[0] == '5') {
            let message_arr = JSON.parse(message.slice(1));
            if (message_arr[1] == document.getElementById('second_user').textContent) {
                let newMessage = document.createElement('div');
                newMessage.classList.add('chat-received')
                let newMessage_para = document.createElement('p');
                newMessage_para.style.color = 'red';
                let time_para = document.createElement('p');
                let message_date = new Date(message_arr[4]);
                time_para.textContent = message_date.getDate() + ' ' + message_date.toLocaleString('default',{month: 'long'}) + ' '+message_date.getFullYear() + ' '+message_date.getHours()+ ':' +message_date.getMinutes()
                newMessage_para.textContent = message_arr[3];
                newMessage.appendChild(newMessage_para);
                newMessage.appendChild(time_para);
                document.getElementById('chatArea').appendChild(newMessage);
                document.getElementById('chatArea').scrollTo({
                    top: document.getElementById('chatArea').scrollHeight,
                })
                if (status == 'online') {
                    // socket.send('8'+JSON.stringify([message_arr[3],message_date,message_arr[1],document.getElementById('user_id').textContent,message_arr[5]]));
                    message_received.push(message_arr[5]);
                }
            }
            if (status == 'online') {
                socket.send('D'+JSON.stringify([document.getElementById('second_user').textContent,document.getElementById('user_id').textContent]));
            }
            
        }
        if (message[0] == '6' || message[0] == 'A' || message[0] == 'D') {
            message = message[0] == 'D' ? message : message.split('|');
            if (message[0] == 'D'||message[1] == document.getElementById('second_user').textContent) {
                let p_arr = document.querySelectorAll('.aqua');
                console.log(p_arr);
                for (let i=0;i<p_arr.length;i++) {
                    console.log(i);
                    console.log(p_arr[i]);
                    p_arr[i].style.color = 'green';
                    p_arr[i].classList.remove('aqua');
                }
            }
        }
        if (message[0] == '7') {
            let message_arr = JSON.parse(message.slice(1));
            if (message_arr[2] == document.getElementById('second_user').textContent) {
                let newMessage = document.createElement('div');
                newMessage.classList.add('chat-sent')
                let newMessage_para = document.createElement('p')
                newMessage_para.style.color = 'aqua'
                newMessage_para.classList.add('aqua');
                let time_para = document.createElement('p');
                let message_date = new Date(message_arr[1]);
                time_para.textContent = message_date.getDate() + ' ' + message_date.toLocaleString('default',{month: 'long'}) + ' '+message_date.getFullYear() + ' '+message_date.getHours()+ ':' +message_date.getMinutes()
                newMessage_para.textContent = message_arr[0];
                newMessage.appendChild(newMessage_para);
                newMessage.appendChild(time_para);
                document.getElementById('chatArea').appendChild(newMessage);
                document.getElementById('chatArea').scrollTo({
                    top: document.getElementById('chatArea').scrollHeight,
                })
            }
            socket.send('B'+JSON.stringify([message_arr[2],document.getElementById('user_id').textContent,message_arr[3]]))
            
        }
        if (message[0] == '8') {
            let p_arr = document.getElementsByClassName('aqua');
            for (let i=0;i<p_arr.length;i++) {
                p_arr[i].style.color = 'green';
                p_arr[i].classList.remove('aqua');
            }
            let message_arr = JSON.parse(message.slice(1));
            if (!membership(message_sent,[8,message_arr[3]]) && !membership(message_sent,[9,message_arr[3]])) {
                console.log(message_sent)
                if (message_arr[2] == document.getElementById('second_user').textContent) {
                    let newMessage = document.createElement('div');
                    newMessage.classList.add('chat-sent')
                    let newMessage_para = document.createElement('p')
                    newMessage_para.style.color = 'green'
                    let time_para = document.createElement('p');
                    let message_date = new Date(message_arr[1]);
                    time_para.textContent = message_date.getDate() + ' ' + message_date.toLocaleString('default',{month: 'long'}) + ' '+message_date.getFullYear() + ' '+message_date.getHours()+ ':' +message_date.getMinutes()
                    newMessage_para.textContent = message_arr[0];
                    newMessage.appendChild(newMessage_para);
                    newMessage.appendChild(time_para);
                    document.getElementById('chatArea').appendChild(newMessage);
                    document.getElementById('chatArea').scrollTo({
                        top: document.getElementById('chatArea').scrollHeight,
                    })
                    message_sent.push([8,message_arr[3]])
                }
            }
        }
        if (message[0] == '9') {
            let message_arr = JSON.parse(message.slice(1));
            if (!membership(message_sent,[8,message_arr[3]]) && !membership(message_sent,[9,message_arr[3]])) {
                console.log(message_sent)
                if (message_arr[2] == document.getElementById('second_user').textContent) {
                    let newMessage = document.createElement('div');
                    newMessage.classList.add('chat-sent')
                    let newMessage_para = document.createElement('p')
                    newMessage_para.style.color = 'aqua'
                    newMessage_para.classList.add('aqua');
                    let time_para = document.createElement('p');
                    let message_date = new Date(message_arr[1]);
                    time_para.textContent = message_date.getDate() + ' ' + message_date.toLocaleString('default',{month: 'long'}) + ' '+message_date.getFullYear() + ' '+message_date.getHours()+ ':' +message_date.getMinutes()
                    newMessage_para.textContent = message_arr[0];
                    newMessage.appendChild(newMessage_para);
                    newMessage.appendChild(time_para);
                    document.getElementById('chatArea').appendChild(newMessage);
                    document.getElementById('chatArea').scrollTo({
                        top: document.getElementById('chatArea').scrollHeight,
                    })
                    message_sent.push([9,message_arr[3]]);
                }

            }
            
        }
        if (message[0] == 'C') {
            console.log(message_received);
            if (message_received.includes(parseInt(message.slice(1)))) {
                socket.send('D'+JSON.stringify([document.getElementById('second_user').textContent,document.getElementById('user_id').textContent]));
            }
        }
    });
</script>
</html>